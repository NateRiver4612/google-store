{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\google-play\\\\client\\\\src\\\\page\\\\Movie\\\\MovieCollection.page.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport MovieItem from '../../component/item/MovieItem/MovieItem.component';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { selectMovies, selectMovieDetail, selectMoviesByType } from '../../redux/store/store.selector';\nimport CategoryCart from '../../component/category-bar/CategoryCart.component';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCollection = ({\n  movies,\n  match\n}) => {\n  const arr = [];\n  Object.keys(movies).map(key => {\n    arr.push(movies[key]);\n  });\n  console.log(movies);\n  const category = match.params.collectionId;\n  arr.sort(function (a, b) {\n    return b.update.seconds - a.update.seconds;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection\",\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      classaName: \"movie-items\",\n      children: arr.map(key => {\n        const {\n          title,\n          rate,\n          price,\n          imgUrl,\n          type,\n          producer,\n          id\n        } = key;\n        return /*#__PURE__*/_jsxDEV(MovieItem, {\n          imgURL: imgUrl,\n          id: id,\n          type: type,\n          price: price,\n          title: title,\n          rate: rate\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MovieCollection;\nconst H1 = styled.h1`\n    display:inline-block;\n    padding-top:60px;\n    font-family: Quicksand ,sans-serif;\n    font-size: 28px;\n    font-weight: 400;\n    padding-left:60px;\n    color:#414141;\n\n    @media screen and (max-width:800px){\n        padding-top:unset;\n    }\n\n`;\n_c2 = H1;\nconst Container = styled.div.attrs(props => ({\n  className: props.classname\n}))`\n        z-index: 1;\n        padding-top:0px;\n        padding-left:60px;\n        padding-right: 60px;\n        padding-bottom: 40px;\n        display: grid;\n        grid-gap:15px;  \n        grid-template-columns: repeat(6,minmax(0,1fr));\n\n        @media screen and (max-width:800px){\n            padding-left:15px;\n            padding-right: 15px;\n            grid-template-columns: repeat(2,minmax(0,1fr));\n        }\n\n`;\n_c3 = Container;\n\nconst mapStateToProps = (state, ownProps) => ({\n  movies: selectMoviesByType(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(MovieCollection);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MovieCollection\");\n$RefreshReg$(_c2, \"H1\");\n$RefreshReg$(_c3, \"Container\");","map":{"version":3,"sources":["C:/Users/Admin/google-play/client/src/page/Movie/MovieCollection.page.jsx"],"names":["React","useEffect","useState","useParams","styled","MovieItem","createStructuredSelector","connect","selectMovies","selectMovieDetail","selectMoviesByType","CategoryCart","withRouter","MovieCollection","movies","match","arr","Object","keys","map","key","push","console","log","category","params","collectionId","sort","a","b","update","seconds","title","rate","price","imgUrl","type","producer","id","H1","h1","Container","div","attrs","props","className","classname","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,oDAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,EAAsBC,iBAAtB,EAAyCC,kBAAzC,QAAkE,kCAAlE;AACA,OAAOC,YAAP,MAAyB,qDAAzB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;AAGA,MAAMC,eAAe,GAAC,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,KAAkB;AAEpC,QAAMC,GAAG,GAAG,EAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,GAApB,CAAyBC,GAAD,IAAO;AAC3BJ,IAAAA,GAAG,CAACK,IAAJ,CAASP,MAAM,CAACM,GAAD,CAAf;AACH,GAFD;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,QAAMU,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAaC,YAA9B;AACAV,EAAAA,GAAG,CAACW,IAAJ,CAAS,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACpB,WAAOA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmBH,CAAC,CAACE,MAAF,CAASC,OAAnC;AACD,GAFH;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI,QAAC,EAAD;AAAA,gBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,UAAU,EAAC,aAAtB;AAAA,gBAEIR,GAAG,CAACG,GAAJ,CAASC,GAAD,IAAO;AACX,cAAM;AAACY,UAAAA,KAAD;AAAOC,UAAAA,IAAP;AAAYC,UAAAA,KAAZ;AAAkBC,UAAAA,MAAlB;AAAyBC,UAAAA,IAAzB;AAA8BC,UAAAA,QAA9B;AAAuCC,UAAAA;AAAvC,YAA6ClB,GAAnD;AACA,4BAAO,QAAC,SAAD;AACH,UAAA,MAAM,EAAEe,MADL;AAGH,UAAA,EAAE,EAAEG,EAHD;AAIH,UAAA,IAAI,EAAEF,IAJH;AAKH,UAAA,KAAK,EAAEF,KALJ;AAMH,UAAA,KAAK,EAAEF,KANJ;AAOH,UAAA,IAAI,EAAEC;AAPH,WAEIK,EAFJ;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQC,OAVL;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAhCD;;KAAMzB,e;AAkCN,MAAM0B,EAAE,GAAGnC,MAAM,CAACoC,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,E;AAgBN,MAAME,SAAS,GAAGrC,MAAM,CAACsC,GAAP,CAAWC,KAAX,CAAkBC,KAAD,KAAU;AACzCC,EAAAA,SAAS,EAACD,KAAK,CAACE;AADyB,CAAV,CAAjB,CAEd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAML,S;;AAoBN,MAAMM,eAAe,GAAE,CAACC,KAAD,EAAOC,QAAP,MAAmB;AACtCnC,EAAAA,MAAM,EAAEJ,kBAAkB,CAACuC,QAAQ,CAAClC,KAAT,CAAeU,MAAf,CAAsBC,YAAvB,CAAlB,CAAuDsB,KAAvD;AAD8B,CAAnB,CAAvB;;AAKA,eAAezC,OAAO,CAACwC,eAAD,CAAP,CAAyBlC,eAAzB,CAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport MovieItem from '../../component/item/MovieItem/MovieItem.component'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {connect} from 'react-redux'\r\nimport {selectMovies, selectMovieDetail, selectMoviesByType} from '../../redux/store/store.selector'\r\nimport CategoryCart from '../../component/category-bar/CategoryCart.component';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nconst MovieCollection=({movies,match})=>{\r\n\r\n    const arr = []\r\n    Object.keys(movies).map((key)=>{\r\n        arr.push(movies[key])\r\n    })\r\n    console.log(movies)\r\n    const category = match.params.collectionId\r\n    arr.sort(function(a, b) {\r\n        return b.update.seconds - a.update.seconds\r\n      });\r\n\r\n    return (\r\n        <div className='collection'>\r\n            <H1>{category}</H1>\r\n            <Container classaName=\"movie-items\">\r\n                {\r\n                arr.map((key)=>{\r\n                    const {title,rate,price,imgUrl,type,producer,id} = key\r\n                    return <MovieItem  \r\n                        imgURL={imgUrl} \r\n                        key = {id} \r\n                        id={id}\r\n                        type={type}\r\n                        price={price} \r\n                        title={title}\r\n                        rate={rate} />\r\n                    })\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst H1 = styled.h1`\r\n    display:inline-block;\r\n    padding-top:60px;\r\n    font-family: Quicksand ,sans-serif;\r\n    font-size: 28px;\r\n    font-weight: 400;\r\n    padding-left:60px;\r\n    color:#414141;\r\n\r\n    @media screen and (max-width:800px){\r\n        padding-top:unset;\r\n    }\r\n\r\n`\r\n\r\n\r\nconst Container = styled.div.attrs((props)=>({\r\n    className:props.classname\r\n}))`\r\n        z-index: 1;\r\n        padding-top:0px;\r\n        padding-left:60px;\r\n        padding-right: 60px;\r\n        padding-bottom: 40px;\r\n        display: grid;\r\n        grid-gap:15px;  \r\n        grid-template-columns: repeat(6,minmax(0,1fr));\r\n\r\n        @media screen and (max-width:800px){\r\n            padding-left:15px;\r\n            padding-right: 15px;\r\n            grid-template-columns: repeat(2,minmax(0,1fr));\r\n        }\r\n\r\n`\r\n\r\nconst mapStateToProps =(state,ownProps)=>({\r\n    movies: selectMoviesByType(ownProps.match.params.collectionId)(state),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(MovieCollection);\r\n"]},"metadata":{},"sourceType":"module"}