{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from 'lodash.memoize';\n\nconst selectStore = state => state.store;\n\nexport const selectItems = createSelector([selectStore], store => store.Items);\nexport const selectMovies = createSelector([selectItems], Items => Items['movies']);\nexport const selectItemsByOption = memoize(option => createSelector([selectItems], Items => Items ? Items[option] : []));\nexport const selectStoreIsLoaded = createSelector([selectStore], store => !!store.Items);\nexport const selectStoreFetching = createSelector([selectStore], store => store.isFetching);\nexport const selectMoviesByType = memoize(category => createSelector([selectItems], Items => Items ? Items['movies'][category] : []));\nexport const selectBooksByType = memoize(category => createSelector([selectItems], Items => Items ? Items['books'][category] : []));\nexport const selectRelatedCollection = (doc, category) => createSelector([selectItems], Items => Items ? Items[doc][category] : []);\nexport const selectItemDetail = (doc, category, id) => createSelector([selectItems], Items => Items ? Items[doc][category][id] : []);\nexport const getCurrentItem = createSelector([selectStore], store => store.currentItem);\nexport const getCurrentItemLoaded = createSelector([selectStore], store => !!store.currentItem);","map":{"version":3,"sources":["C:/Users/Admin/google-play/client/src/redux/store/store.selector.js"],"names":["createSelector","memoize","selectStore","state","store","selectItems","Items","selectMovies","selectItemsByOption","option","selectStoreIsLoaded","selectStoreFetching","isFetching","selectMoviesByType","category","selectBooksByType","selectRelatedCollection","doc","selectItemDetail","id","getCurrentItem","currentItem","getCurrentItemLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAUA,KAAK,CAACC,KAApC;;AAGA,OAAO,MAAMC,WAAW,GAAGL,cAAc,CACrC,CAACE,WAAD,CADqC,EAErCE,KAAK,IAAGA,KAAK,CAACE,KAFuB,CAAlC;AAKP,OAAO,MAAMC,YAAY,GAAGP,cAAc,CACtC,CAACK,WAAD,CADsC,EAEtCC,KAAK,IAAIA,KAAK,CAAC,QAAD,CAFwB,CAAnC;AAKP,OAAO,MAAME,mBAAmB,GAAGP,OAAO,CAAEQ,MAAD,IAAUT,cAAc,CAC/D,CAACK,WAAD,CAD+D,EAE/DC,KAAK,IAAIA,KAAK,GAAEA,KAAK,CAACG,MAAD,CAAP,GAAiB,EAFgC,CAAzB,CAAnC;AAKP,OAAO,MAAMC,mBAAmB,GAAGV,cAAc,CAC7C,CAACE,WAAD,CAD6C,EAE7CE,KAAK,IAAI,CAAC,CAACA,KAAK,CAACE,KAF4B,CAA1C;AAKP,OAAO,MAAMK,mBAAmB,GAAGX,cAAc,CAC7C,CAACE,WAAD,CAD6C,EAE7CE,KAAK,IAAIA,KAAK,CAACQ,UAF8B,CAA1C;AAMP,OAAO,MAAMC,kBAAkB,GAAGZ,OAAO,CAAEa,QAAD,IAAcd,cAAc,CAClE,CAACK,WAAD,CADkE,EAElEC,KAAK,IAAIA,KAAK,GAAEA,KAAK,CAAC,QAAD,CAAL,CAAgBQ,QAAhB,CAAF,GAA6B,EAFuB,CAA7B,CAAlC;AAKP,OAAO,MAAMC,iBAAiB,GAAGd,OAAO,CAAEa,QAAD,IAAcd,cAAc,CACjE,CAACK,WAAD,CADiE,EAEjEC,KAAK,IAAIA,KAAK,GAAEA,KAAK,CAAC,OAAD,CAAL,CAAeQ,QAAf,CAAF,GAA4B,EAFuB,CAA7B,CAAjC;AAQP,OAAO,MAAME,uBAAuB,GAAI,CAACC,GAAD,EAAKH,QAAL,KAAgBd,cAAc,CAClE,CAACK,WAAD,CADkE,EAElEC,KAAK,IAAIA,KAAK,GAAGA,KAAK,CAACW,GAAD,CAAL,CAAWH,QAAX,CAAH,GAAwB,EAF4B,CAA/D;AAKP,OAAO,MAAMI,gBAAgB,GAAI,CAACD,GAAD,EAAKH,QAAL,EAAcK,EAAd,KAAqBnB,cAAc,CAChE,CAACK,WAAD,CADgE,EAEhEC,KAAK,IAAIA,KAAK,GAAEA,KAAK,CAACW,GAAD,CAAL,CAAWH,QAAX,EAAqBK,EAArB,CAAF,GAA6B,EAFqB,CAA7D;AAMP,OAAO,MAAMC,cAAc,GAAGpB,cAAc,CACxC,CAACE,WAAD,CADwC,EAExCE,KAAK,IAAIA,KAAK,CAACiB,WAFyB,CAArC;AAKP,OAAO,MAAMC,oBAAoB,GAAGtB,cAAc,CAC9C,CAACE,WAAD,CAD8C,EAE9CE,KAAK,IAAI,CAAC,CAACA,KAAK,CAACiB,WAF6B,CAA3C","sourcesContent":["import { createSelector } from \"reselect\";\r\nimport memoize from 'lodash.memoize';\r\n\r\nconst selectStore = (state) =>state.store\r\n\r\n\r\nexport const selectItems = createSelector(\r\n    [selectStore],\r\n    store=> store.Items\r\n)\r\n\r\nexport const selectMovies = createSelector(\r\n    [selectItems],\r\n    Items => Items['movies']\r\n);\r\n\r\nexport const selectItemsByOption = memoize((option)=>createSelector(\r\n    [selectItems],\r\n    Items => Items? Items[option]: []\r\n))\r\n\r\nexport const selectStoreIsLoaded = createSelector(\r\n    [selectStore],\r\n    store => !!store.Items\r\n)\r\n\r\nexport const selectStoreFetching = createSelector(\r\n    [selectStore],\r\n    store => store.isFetching\r\n);\r\n\r\n\r\nexport const selectMoviesByType = memoize((category) => createSelector(\r\n    [selectItems],\r\n    Items => Items? Items['movies'][category]: []\r\n));\r\n\r\nexport const selectBooksByType = memoize((category) => createSelector(\r\n    [selectItems],\r\n    Items => Items? Items['books'][category]: []\r\n));\r\n\r\n\r\n\r\n\r\nexport const selectRelatedCollection = ((doc,category)=>createSelector(\r\n    [selectItems],\r\n    Items => Items ? Items[doc][category]:[]\r\n));\r\n\r\nexport const selectItemDetail = ((doc,category,id) => createSelector(\r\n    [selectItems],\r\n    Items => Items? Items[doc][category][id] : [] \r\n));\r\n\r\n\r\nexport const getCurrentItem = createSelector(\r\n    [selectStore],\r\n    store => store.currentItem\r\n)\r\n\r\nexport const getCurrentItemLoaded = createSelector(\r\n    [selectStore],\r\n    store => !!store.currentItem\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}