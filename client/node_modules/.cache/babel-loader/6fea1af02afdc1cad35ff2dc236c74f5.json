{"ast":null,"code":"import StoreActionTypes from './store.type';\nimport { firestore } from '../../firebase/firebase.utils';\nimport { convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: StoreActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchPeoplesStart = () => ({\n  type: StoreActionTypes.FETCH_PEOPLE_START\n});\nexport const fetchPeoplesSuccess = people => ({\n  type: StoreActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: people\n});\nexport const fetchPeopleFailure = () => ({});\nexport const fetchCollectionSuccess = collection => ({\n  type: StoreActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collection\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: StoreActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage.message\n});\nexport const fetchCollectionAsync = document => {\n  return dispatch => {\n    const collectionRef = firestore.collection('store');\n    dispatch(fetchCollectionsStart());\n    collectionRef.doc(document).get().then(snapShot => {\n      const {\n        categories\n      } = snapShot.data();\n      const collectionMap = convertCollectionsSnapshotToMap(categories);\n      dispatch(fetchCollectionSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/google-play/client/src/redux/store/store.action.js"],"names":["StoreActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchPeoplesStart","FETCH_PEOPLE_START","fetchPeoplesSuccess","people","FETCH_COLLECTION_SUCCESS","payload","fetchPeopleFailure","fetchCollectionSuccess","collection","fetchCollectionFailure","errorMessage","FETCH_COLLECTION_FAILURE","message","fetchCollectionAsync","document","dispatch","collectionRef","doc","get","then","snapShot","categories","data","collectionMap","catch","error"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,cAA7B;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEJ,gBAAgB,CAACK;AADgB,CAAN,CAA9B;AAIP,OAAO,MAAMC,iBAAiB,GAAE,OAAK;AACjCF,EAAAA,IAAI,EAACJ,gBAAgB,CAACO;AADW,CAAL,CAAzB;AAIP,OAAO,MAAMC,mBAAmB,GAAGC,MAAD,KAAW;AACzCL,EAAAA,IAAI,EAACJ,gBAAgB,CAACU,wBADmB;AAEzCC,EAAAA,OAAO,EAACF;AAFiC,CAAX,CAA3B;AAKP,OAAO,MAAMG,kBAAkB,GAAE,OAAK,EAAL,CAA1B;AAKP,OAAO,MAAMC,sBAAsB,GAAIC,UAAD,KAAgB;AAClDV,EAAAA,IAAI,EAACJ,gBAAgB,CAACU,wBAD4B;AAElDC,EAAAA,OAAO,EAAGG;AAFwC,CAAhB,CAA/B;AAKP,OAAO,MAAMC,sBAAsB,GAAIC,YAAD,KAAiB;AACnDZ,EAAAA,IAAI,EAACJ,gBAAgB,CAACiB,wBAD6B;AAEnDN,EAAAA,OAAO,EAAEK,YAAY,CAACE;AAF6B,CAAjB,CAA/B;AAMP,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAAY;AAC5C,SAAOC,QAAQ,IAAE;AACb,UAAMC,aAAa,GAAGrB,SAAS,CAACa,UAAV,CAAqB,OAArB,CAAtB;AAEAO,IAAAA,QAAQ,CAAClB,qBAAqB,EAAtB,CAAR;AAEAmB,IAAAA,aAAa,CAACC,GAAd,CAAkBH,QAAlB,EAA4BI,GAA5B,GAAkCC,IAAlC,CAAuCC,QAAQ,IAAE;AAC7C,YAAM;AAACC,QAAAA;AAAD,UAAeD,QAAQ,CAACE,IAAT,EAArB;AACA,YAAMC,aAAa,GAAG3B,+BAA+B,CAACyB,UAAD,CAArD;AACAN,MAAAA,QAAQ,CAACR,sBAAsB,CAACgB,aAAD,CAAvB,CAAR;AACH,KAJD,EAIGC,KAJH,CAISC,KAAK,IAAEV,QAAQ,CAACN,sBAAsB,CAACgB,KAAK,CAACb,OAAP,CAAvB,CAJxB;AAMP,GAXG;AAYH,CAbM","sourcesContent":["import StoreActionTypes from './store.type'\r\nimport {firestore} from '../../firebase/firebase.utils'\r\nimport { convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\n\r\nexport const fetchCollectionsStart = ()=> ({\r\n    type: StoreActionTypes.FETCH_COLLECTION_START,\r\n});\r\n\r\nexport const fetchPeoplesStart =()=>({\r\n    type:StoreActionTypes.FETCH_PEOPLE_START\r\n})\r\n\r\nexport const fetchPeoplesSuccess =(people)=>({\r\n    type:StoreActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload:people\r\n})\r\n\r\nexport const fetchPeopleFailure =()=>({\r\n\r\n})\r\n\r\n\r\nexport const fetchCollectionSuccess = (collection) =>({\r\n    type:StoreActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload : collection\r\n})\r\n\r\nexport const fetchCollectionFailure = (errorMessage)=>({\r\n    type:StoreActionTypes.FETCH_COLLECTION_FAILURE,\r\n    payload: errorMessage.message\r\n})\r\n\r\n\r\nexport const fetchCollectionAsync = (document)=>{\r\n    return dispatch=>{\r\n        const collectionRef = firestore.collection('store');\r\n\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.doc(document).get().then(snapShot=>{\r\n            const {categories} = snapShot.data()\r\n            const collectionMap = convertCollectionsSnapshotToMap(categories)\r\n            dispatch(fetchCollectionSuccess(collectionMap))\r\n        }).catch(error=>dispatch(fetchCollectionFailure(error.message)))\r\n\r\n}\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}