{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\google-play\\\\client\\\\src\\\\component\\\\person\\\\Person.component.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport BookItem from '../item/BookItem/BookItem.component';\nimport MovieItem from '../item/MovieItem/MovieItem.component';\nimport ReactTextCollapse from '../react-text-collapse/ReactTextCollapse';\nimport { selectMovies } from '../../redux/store/store.selector';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectItems } from '../../redux/store/store.selector';\nimport { map } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Person = ({\n  person,\n  items\n}) => {\n  const {\n    imgUrl,\n    name,\n    story,\n    birthplace,\n    job,\n    birthdate\n  } = person;\n  const participatedList = [];\n\n  const eraseDuplicate = arr => {\n    for (var i = 0; i < arr.length; i++) {\n      console.log(i);\n\n      for (var j = arr.length - 1; j > i; j--) {\n        if (arr[i]['id'] == arr[j]['id']) {\n          arr.splice(j, 1);\n        }\n      }\n    }\n  };\n\n  if (job == 'actors') {\n    const movies = items['movies'];\n    Object.keys(movies).map(type => Object.keys(movies[type]).map(movie => {\n      if (movies[type][movie]['performer'].includes(`${name.trim()}`)) {\n        participatedList.push(movies[type][movie]);\n      }\n    }));\n    eraseDuplicate(participatedList);\n  }\n\n  if (job == 'authors') {\n    const books = items['books'];\n    Object.keys(books).map(type => Object.keys(books[type]).map(book => {\n      if (books[type][book]['author'].includes(`${name.trim()}`)) {\n        participatedList.push(books[type][book]);\n      }\n    }));\n    eraseDuplicate(participatedList);\n  }\n\n  console.log(participatedList);\n  const TEXT_COLLAPSE_OPTIONS = {\n    collapse: false,\n    collapseText: 'READ MORE',\n    expandText: 'READ LESS',\n    minHeight: 122,\n    maxHeight: 342,\n    textStyle: {\n      fontSize: 14,\n      paddingLeft: '40%',\n      color: 'white',\n      cursor: 'pointer',\n      fontWeight: '500',\n      opacity: '0.8'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Wrap, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(ReactTextCollapse, {\n          options: TEXT_COLLAPSE_OPTIONS,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              margin: '0px'\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              height: 'fit-content',\n              margin: 2\n            },\n            children: [\"Date of birth: \", birthdate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              height: 'fit-content',\n              margin: 1\n            },\n            children: [\"Place of birth: \", birthplace]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      className: \"product-participated\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Products Participated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n        className: \"products\",\n        children: job == 'actors' ? participatedList.map(movie => {\n          const {\n            imgUrl,\n            id,\n            type,\n            price,\n            title,\n            rate\n          } = movie;\n          return /*#__PURE__*/_jsxDEV(MovieItem, {\n            imgURL: imgUrl,\n            id: id,\n            type: type,\n            price: price,\n            title: title,\n            rate: rate\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 28\n          }, this);\n        }) : job == 'authors' ? participatedList.map(book => {\n          const {\n            title,\n            imgUrl,\n            price,\n            rate,\n            type,\n            id,\n            description,\n            author,\n            published,\n            page,\n            language\n          } = book;\n          return /*#__PURE__*/_jsxDEV(BookItem, {\n            imgURL: imgUrl,\n            id: id,\n            type: type,\n            author: author,\n            price: price,\n            title: title,\n            rate: rate\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 32\n          }, this);\n        }) : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Person;\nconst Wrap = styled.div.attrs(props => ({\n  className: props.classname\n}))`\n    font-family: 'Quicksand', sans-serif;\n    &.container{\n        width: 100%;\n        position: relative;\n        img{\n            width:100%;\n            height:400px;\n            object-fit: cover;\n            object-position: -0px 20%;\n        }\n    }\n\n    &.content{\n        position: absolute;\n        background: rgb(0, 0, 0); /* Fallback color */\n        background: rgba(0, 0, 0, 0.5); /* Black background with 0.5 opacity */\n        color: #f1f1f1;\n        padding:20px;\n        bottom: 4px;\n    }\n\n    &.product-participated{\n        padding:20px;\n        h1{\n           opacity: 0.7;\n        }\n    }\n    &.products{\n        display: grid;\n        grid-template-columns: repeat(5,minmax(0,1fr));\n    }\n\n`;\n_c2 = Wrap;\nconst Container = styled.div`\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\n`;\n_c3 = Container;\nconst mapStateToProps = createStructuredSelector({\n  items: selectItems\n});\nexport default connect(mapStateToProps)(Person);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Person\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Container\");","map":{"version":3,"sources":["C:/Users/Admin/google-play/client/src/component/person/Person.component.jsx"],"names":["React","styled","BookItem","MovieItem","ReactTextCollapse","selectMovies","connect","createStructuredSelector","selectItems","map","Person","person","items","imgUrl","name","story","birthplace","job","birthdate","participatedList","eraseDuplicate","arr","i","length","console","log","j","splice","movies","Object","keys","type","movie","includes","trim","push","books","book","TEXT_COLLAPSE_OPTIONS","collapse","collapseText","expandText","minHeight","maxHeight","textStyle","fontSize","paddingLeft","color","cursor","fontWeight","opacity","margin","height","id","price","title","rate","description","author","published","page","language","Wrap","div","attrs","props","className","classname","Container","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BookItem from '../item/BookItem/BookItem.component'\r\nimport MovieItem from '../item/MovieItem/MovieItem.component'\r\nimport ReactTextCollapse from '../react-text-collapse/ReactTextCollapse'\r\nimport { selectMovies } from '../../redux/store/store.selector'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectItems } from '../../redux/store/store.selector'\r\nimport { map } from 'lodash'\r\n\r\nconst Person = ({person,items})=> {\r\n    const {imgUrl,name,story,birthplace,job,birthdate} = person\r\n    const participatedList = []\r\n    const eraseDuplicate  = (arr)=>{\r\n        for(var i = 0;i < arr.length; i++){\r\n            console.log(i)\r\n            for(var j = arr.length-1;j > i  ; j--){\r\n                if(arr[i]['id'] == arr[j]['id']){\r\n                    arr.splice(j,1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(job == 'actors'){\r\n        const movies = items['movies']\r\n        Object.keys(movies).map(type=>\r\n            Object.keys(movies[type]).map(movie=>{\r\n                if(movies[type][movie]['performer'].includes(`${name.trim()}`)){\r\n                    participatedList.push(movies[type][movie])\r\n                }\r\n            }\r\n            )\r\n        )\r\n        eraseDuplicate(participatedList)\r\n    }\r\n    if(job == 'authors'){\r\n        const books = items['books']\r\n        Object.keys(books).map(type=>\r\n            Object.keys(books[type]).map(book=>{\r\n                if(books[type][book]['author'].includes(`${name.trim()}`)){\r\n                    participatedList.push(books[type][book])\r\n                }\r\n            }\r\n            )\r\n        )\r\n        eraseDuplicate(participatedList)\r\n    }\r\n\r\n    console.log(participatedList)\r\n\r\n    const TEXT_COLLAPSE_OPTIONS = {\r\n        collapse: false,\r\n        collapseText: 'READ MORE',\r\n        expandText: 'READ LESS',\r\n        minHeight: 122,\r\n        maxHeight: 342,\r\n        textStyle: {\r\n            fontSize:14,\r\n            paddingLeft:'40%',\r\n            color:'white',\r\n            cursor:'pointer',\r\n            fontWeight:'500',\r\n            opacity:'0.8',\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n        <Wrap className=\"container\">\r\n            <img src={imgUrl}/>\r\n            <Wrap className=\"content\">\r\n                <ReactTextCollapse options={TEXT_COLLAPSE_OPTIONS}>\r\n                    <h1 style={{margin:'0px'}}>{name}</h1>\r\n                    <h4 style={{height:'fit-content',margin:2}}>Date of birth: {birthdate}</h4>\r\n                    <h4 style={{height:'fit-content',margin:1}}>Place of birth: {birthplace}</h4>\r\n                    <p>\r\n                        {story}\r\n                    </p>\r\n                </ReactTextCollapse>\r\n            </Wrap>\r\n        </Wrap>\r\n        <Wrap className='product-participated'>\r\n            <h1>Products Participated</h1>\r\n            <Wrap className='products'>\r\n            {job == 'actors'\r\n                ?\r\n                participatedList.map(movie=>{\r\n                    const {imgUrl,id,type,price,title,rate} = movie\r\n                    return <MovieItem   imgURL={imgUrl}  key = {id} id={id}type={type} price={price} title={title}rate={rate} />\r\n                })\r\n                :\r\n                    job == 'authors'\r\n                    ?\r\n                    participatedList.map(book=>{\r\n                        const {title, imgUrl,price,rate,type,id,description,author,published,page,language} = book\r\n                        return <BookItem  imgURL={imgUrl} key = {id} id={id} type={type} author={author} price={price} title={title} rate={rate} />\r\n                    })\r\n                    :\r\n                    []\r\n            }\r\n            </Wrap>\r\n        </Wrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Wrap = styled.div.attrs(props=>({\r\n    className:props.classname\r\n}))`\r\n    font-family: 'Quicksand', sans-serif;\r\n    &.container{\r\n        width: 100%;\r\n        position: relative;\r\n        img{\r\n            width:100%;\r\n            height:400px;\r\n            object-fit: cover;\r\n            object-position: -0px 20%;\r\n        }\r\n    }\r\n\r\n    &.content{\r\n        position: absolute;\r\n        background: rgb(0, 0, 0); /* Fallback color */\r\n        background: rgba(0, 0, 0, 0.5); /* Black background with 0.5 opacity */\r\n        color: #f1f1f1;\r\n        padding:20px;\r\n        bottom: 4px;\r\n    }\r\n\r\n    &.product-participated{\r\n        padding:20px;\r\n        h1{\r\n           opacity: 0.7;\r\n        }\r\n    }\r\n    &.products{\r\n        display: grid;\r\n        grid-template-columns: repeat(5,minmax(0,1fr));\r\n    }\r\n\r\n`\r\n\r\nconst Container = styled.div`\r\n    background-color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;\r\n`\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    items:selectItems\r\n})\r\n\r\nexport default connect(mapStateToProps)(Person)"]},"metadata":{},"sourceType":"module"}